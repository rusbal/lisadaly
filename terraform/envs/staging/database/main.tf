# Auto-generated by fogg. Do not edit
# Make improvements in fogg, so that everyone can benefit.

locals {
  name = "raymond"
  tags = { Name = "lisadaly-DB" }
}

module "terraform-aws-rds" {
  source = "github.com/terraform-aws-modules/terraform-aws-rds"

  identifier = "lisadaly-${local.name}-default"

  create_db_option_group    = false
  create_db_parameter_group = false

  engine               = "postgres"
  engine_version       = "14.1"
  family               = "postgres14" # DB parameter group
  major_engine_version = "14"         # DB option group
  instance_class       = "db.t3.micro"

  allocated_storage = 20

  # NOTE: Do NOT use 'user' as the value for 'username' as it throws:
  # "Error creating DB Instance: InvalidParameterValue: MasterUsername
  # user cannot be used as it is a reserved word used by the engine"
  db_name  = "lisadalydb"
  username = "postgres"
  port     = 5432

  db_subnet_group_name   = aws_db_subnet_group.default.name
  vpc_security_group_ids = [module.security_group.security_group_id]

  maintenance_window      = "Mon:00:00-Mon:03:00"
  backup_window           = "03:00-06:00"
  backup_retention_period = 0

  tags = local.tags
}

resource "aws_db_subnet_group" "default" {
  name       = "db-subnet-group-name"
  subnet_ids = data.terraform_remote_state.vpc.outputs.private_db_subnets_id
  tags       = local.tags
}

module "security_group" {
  source  = "terraform-aws-modules/security-group/aws"
  version = "~> 4.0"

  name        = local.name
  description = "Complete PostgreSQL example security group"
  vpc_id      = data.terraform_remote_state.vpc.outputs.vpc_id

  # ingress
  ingress_with_cidr_blocks = [
    {
      from_port   = 5432
      to_port     = 5432
      protocol    = "tcp"
      description = "PostgreSQL access from within VPC"
      cidr_blocks = data.aws_subnet.db_subnet.cidr_block
    },
  ]

  tags = local.tags
}

data "aws_subnet" "db_subnet" {
  id = data.terraform_remote_state.vpc.outputs.private_db_subnets_id[0]
}
